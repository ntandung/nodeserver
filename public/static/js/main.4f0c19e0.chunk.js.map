{"version":3,"sources":["Pages/Login/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","props","name","initialValues","remember","Item","label","rule","required","message","Password","valuePropName","type","htmlType","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAqCeA,EAlCD,SAACC,GACb,OACE,eAAC,IAAD,CACEC,KAAK,QACLC,cAAe,CACbC,UAAU,GAHd,UAME,cAAC,IAAKC,KAAN,CACEC,MAAM,WACNJ,KAAK,WACLK,KAAM,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHpC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAKJ,KAAN,CACEC,MAAM,WACNJ,KAAK,WACLK,KAAM,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHpC,SAKE,cAAC,IAAMC,SAAP,MAEF,cAAC,IAAKL,KAAN,CAAWH,KAAK,WAAWS,cAAc,UAAzC,SACE,cAAC,IAAD,4BAEF,cAAC,IAAKN,KAAN,UACE,cAAC,IAAD,CAAQO,KAAK,UAAUC,SAAS,SAAhC,0BClBOC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4f0c19e0.chunk.js","sourcesContent":["import { Form, Button, Input, Checkbox } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <Form\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rule={[{ required: true, message: \"Please input your username!\" }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rule={[{ required: true, message: \"Please input your password!\" }]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n        <Checkbox>Remember me</Checkbox>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import \"./App.css\";\nimport Login from \"./Pages/Login\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}